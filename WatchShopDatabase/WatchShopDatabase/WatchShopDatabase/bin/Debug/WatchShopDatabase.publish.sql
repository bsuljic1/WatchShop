/*
Deployment script for WatchShopDatabase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "WatchShopDatabase"
:setvar DefaultFilePrefix "WatchShopDatabase"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating Table [dbo].[Brand]...';


GO
CREATE TABLE [dbo].[Brand] (
    [BrandId]   UNIQUEIDENTIFIER NOT NULL,
    [BrandName] NVARCHAR (50)    NOT NULL,
    CONSTRAINT [Pk_Brand_BrandId] PRIMARY KEY CLUSTERED ([BrandId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Cart]...';


GO
CREATE TABLE [dbo].[Cart] (
    [CartId]     UNIQUEIDENTIFIER NOT NULL,
    [TotalPrice] DECIMAL (32)     NOT NULL,
    [Quantity]   INT              NOT NULL,
    [WatchId]    UNIQUEIDENTIFIER NOT NULL,
    [UserId]     UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [Pk_Cart_CartId] PRIMARY KEY CLUSTERED ([CartId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Color]...';


GO
CREATE TABLE [dbo].[Color] (
    [ColorId]   UNIQUEIDENTIFIER NOT NULL,
    [ColorName] NVARCHAR (50)    NOT NULL,
    CONSTRAINT [Pk_Color_ColorId] PRIMARY KEY CLUSTERED ([ColorId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Condition]...';


GO
CREATE TABLE [dbo].[Condition] (
    [ConditionId]   UNIQUEIDENTIFIER NOT NULL,
    [ConditionName] NVARCHAR (20)    NOT NULL,
    CONSTRAINT [Pk_Condition_ConditionId] PRIMARY KEY CLUSTERED ([ConditionId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Gender]...';


GO
CREATE TABLE [dbo].[Gender] (
    [GenderId]   UNIQUEIDENTIFIER NOT NULL,
    [GenderName] NVARCHAR (10)    NOT NULL,
    CONSTRAINT [Pk_Gender_GenderId] PRIMARY KEY CLUSTERED ([GenderId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Privilege]...';


GO
CREATE TABLE [dbo].[Privilege] (
    [PrivilegeId]   UNIQUEIDENTIFIER NOT NULL,
    [PrivilegeName] NVARCHAR (50)    NOT NULL,
    CONSTRAINT [Pk_Privilege_PrivilegeId] PRIMARY KEY CLUSTERED ([PrivilegeId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Purchase]...';


GO
CREATE TABLE [dbo].[Purchase] (
    [PurchaseId]     UNIQUEIDENTIFIER NOT NULL,
    [PurchasePrice]  DECIMAL (32)     NOT NULL,
    [Quantity]       INT              NOT NULL,
    [TimeOfPurchase] DATETIME         NOT NULL,
    [UserId]         UNIQUEIDENTIFIER NOT NULL,
    [WatchId]        UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [Pk_Purchase_PurchaseId] PRIMARY KEY CLUSTERED ([PurchaseId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Role]...';


GO
CREATE TABLE [dbo].[Role] (
    [RoleId]   UNIQUEIDENTIFIER NOT NULL,
    [RoleName] NVARCHAR (50)    NOT NULL,
    CONSTRAINT [Pk_Role_RoleId] PRIMARY KEY CLUSTERED ([RoleId] ASC)
);


GO
PRINT N'Creating Table [dbo].[RolePrivilege]...';


GO
CREATE TABLE [dbo].[RolePrivilege] (
    [RolePrivilegeId] UNIQUEIDENTIFIER NOT NULL,
    [RoleId]          UNIQUEIDENTIFIER NOT NULL,
    [PrivilegeId]     UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [Pk_RolePrivilege_RolePrivilegeId] PRIMARY KEY CLUSTERED ([RolePrivilegeId] ASC)
);


GO
PRINT N'Creating Table [dbo].[ScriptHistory]...';


GO
CREATE TABLE [dbo].[ScriptHistory] (
    [ScriptHistoryId] UNIQUEIDENTIFIER NOT NULL,
    [DateCreated]     DATE             NOT NULL,
    PRIMARY KEY CLUSTERED ([ScriptHistoryId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Style]...';


GO
CREATE TABLE [dbo].[Style] (
    [StyleId]   UNIQUEIDENTIFIER NOT NULL,
    [StyleName] NVARCHAR (50)    NOT NULL,
    CONSTRAINT [Pk_Style_StyleId] PRIMARY KEY CLUSTERED ([StyleId] ASC)
);


GO
PRINT N'Creating Table [dbo].[StyleWatch]...';


GO
CREATE TABLE [dbo].[StyleWatch] (
    [StyleWatchId] UNIQUEIDENTIFIER NOT NULL,
    [StyleId]      UNIQUEIDENTIFIER NOT NULL,
    [WatchId]      UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [Pk_StyleWatch_StyleWatchIdStyleIdWatchId] PRIMARY KEY CLUSTERED ([StyleWatchId] ASC, [StyleId] ASC, [WatchId] ASC)
);


GO
PRINT N'Creating Table [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [UserId]        UNIQUEIDENTIFIER NOT NULL,
    [UserFirstName] NVARCHAR (50)    NOT NULL,
    [UserLastName]  NVARCHAR (50)    NOT NULL,
    [Email]         NVARCHAR (250)   NOT NULL,
    [Password]      NVARCHAR (50)    NOT NULL,
    [Phone]         NVARCHAR (50)    NOT NULL,
    [Address]       NVARCHAR (200)   NOT NULL,
    CONSTRAINT [Pk_User_UserId] PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating Table [dbo].[UserRole]...';


GO
CREATE TABLE [dbo].[UserRole] (
    [UserId] UNIQUEIDENTIFIER NOT NULL,
    [RoleId] UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [Pk_UserRole_UserIdRoleId] PRIMARY KEY CLUSTERED ([UserId] ASC, [RoleId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Watch]...';


GO
CREATE TABLE [dbo].[Watch] (
    [WatchId]          UNIQUEIDENTIFIER NOT NULL,
    [Model]            NVARCHAR (100)   NOT NULL,
    [DatePublished]    DATE             NOT NULL,
    [BraceletMaterial] NVARCHAR (100)   NOT NULL,
    [CaseDiameter]     DECIMAL (18)     NOT NULL,
    [WaterResistant]   INT              NOT NULL,
    [Price]            DECIMAL (32)     NOT NULL,
    [ShippingPrice]    DECIMAL (32)     NOT NULL,
    [Guarantee]        INT              NOT NULL,
    [Image]            NVARCHAR (500)   NOT NULL,
    [BrandId]          UNIQUEIDENTIFIER NOT NULL,
    [GenderId]         UNIQUEIDENTIFIER NOT NULL,
    [ConditionId]      UNIQUEIDENTIFIER NOT NULL,
    [ColorId]          UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [Pk_Watch_WatchId] PRIMARY KEY CLUSTERED ([WatchId] ASC)
);


GO
PRINT N'Creating Table [dbo].[WishList]...';


GO
CREATE TABLE [dbo].[WishList] (
    [WishListId] UNIQUEIDENTIFIER NOT NULL,
    [WatchId]    UNIQUEIDENTIFIER NOT NULL,
    [UserId]     UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [Pk_WishList_WishListId] PRIMARY KEY CLUSTERED ([WishListId] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Watch_Cart_WatchId]...';


GO
ALTER TABLE [dbo].[Cart]
    ADD CONSTRAINT [Fk_Watch_Cart_WatchId] FOREIGN KEY ([WatchId]) REFERENCES [dbo].[Watch] ([WatchId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_User_Cart_UserId]...';


GO
ALTER TABLE [dbo].[Cart]
    ADD CONSTRAINT [Fk_User_Cart_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[User] ([UserId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Watch_Purchase_WatchId]...';


GO
ALTER TABLE [dbo].[Purchase]
    ADD CONSTRAINT [Fk_Watch_Purchase_WatchId] FOREIGN KEY ([WatchId]) REFERENCES [dbo].[Watch] ([WatchId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_User_Purchase_UserId]...';


GO
ALTER TABLE [dbo].[Purchase]
    ADD CONSTRAINT [Fk_User_Purchase_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[User] ([UserId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Role_RolePrivilege_RoleId]...';


GO
ALTER TABLE [dbo].[RolePrivilege]
    ADD CONSTRAINT [Fk_Role_RolePrivilege_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[Role] ([RoleId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Privilege_RolePrivilege_PrivilegeId]...';


GO
ALTER TABLE [dbo].[RolePrivilege]
    ADD CONSTRAINT [Fk_Privilege_RolePrivilege_PrivilegeId] FOREIGN KEY ([PrivilegeId]) REFERENCES [dbo].[Privilege] ([PrivilegeId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Watch_StyleWatch_WatchId]...';


GO
ALTER TABLE [dbo].[StyleWatch]
    ADD CONSTRAINT [Fk_Watch_StyleWatch_WatchId] FOREIGN KEY ([WatchId]) REFERENCES [dbo].[Watch] ([WatchId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Style_StyleWatch_StyleId]...';


GO
ALTER TABLE [dbo].[StyleWatch]
    ADD CONSTRAINT [Fk_Style_StyleWatch_StyleId] FOREIGN KEY ([StyleId]) REFERENCES [dbo].[Style] ([StyleId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_User_UserRole_UserId]...';


GO
ALTER TABLE [dbo].[UserRole]
    ADD CONSTRAINT [Fk_User_UserRole_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[User] ([UserId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Role_UserRole_RoleId]...';


GO
ALTER TABLE [dbo].[UserRole]
    ADD CONSTRAINT [Fk_Role_UserRole_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[Role] ([RoleId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Condition_Watch_ConditionId]...';


GO
ALTER TABLE [dbo].[Watch]
    ADD CONSTRAINT [Fk_Condition_Watch_ConditionId] FOREIGN KEY ([ConditionId]) REFERENCES [dbo].[Condition] ([ConditionId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Brand_Watch_BrandId]...';


GO
ALTER TABLE [dbo].[Watch]
    ADD CONSTRAINT [Fk_Brand_Watch_BrandId] FOREIGN KEY ([BrandId]) REFERENCES [dbo].[Brand] ([BrandId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Gender_Watch_GenderId]...';


GO
ALTER TABLE [dbo].[Watch]
    ADD CONSTRAINT [Fk_Gender_Watch_GenderId] FOREIGN KEY ([GenderId]) REFERENCES [dbo].[Gender] ([GenderId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Color_Watch_ColorId]...';


GO
ALTER TABLE [dbo].[Watch]
    ADD CONSTRAINT [Fk_Color_Watch_ColorId] FOREIGN KEY ([ColorId]) REFERENCES [dbo].[Color] ([ColorId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_Watch_WishList_WatchId]...';


GO
ALTER TABLE [dbo].[WishList]
    ADD CONSTRAINT [Fk_Watch_WishList_WatchId] FOREIGN KEY ([WatchId]) REFERENCES [dbo].[Watch] ([WatchId]);


GO
PRINT N'Creating Foreign Key [dbo].[Fk_User_WishList_UserId]...';


GO
ALTER TABLE [dbo].[WishList]
    ADD CONSTRAINT [Fk_User_WishList_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[User] ([UserId]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0c04cc20-c082-4c84-9e9d-56e379b3ea19')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0c04cc20-c082-4c84-9e9d-56e379b3ea19')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
